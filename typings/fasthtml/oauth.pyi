"""
This type stub file was generated by pyright.
"""

from fastcore.utils import *
from oauthlib.oauth2 import WebApplicationClient

__all__ = ['GoogleAppClient', 'GitHubAppClient', 'retr_code']
class _AppClient(WebApplicationClient):
    def __init__(self, client_id, client_secret, redirect_uri, code=..., scope=..., **kwargs) -> None:
        ...
    


class GoogleAppClient(_AppClient):
    "A `WebApplicationClient` for Google oauth2"
    pre = ...
    acct_pre = ...
    scope_pre = ...
    base_url = ...
    token_url = ...
    info_url = ...
    id_key = ...
    def __init__(self, client_id, client_secret, redirect_uri=..., redirect_uris=..., code=..., scope=..., **kwargs) -> None:
        ...
    


class GitHubAppClient(_AppClient):
    "A `WebApplicationClient` for GitHub oauth2"
    pre = ...
    base_url = ...
    token_url = ...
    info_url = ...
    id_key = ...
    def __init__(self, client_id, client_secret, redirect_uri, code=..., scope=..., **kwargs) -> None:
        ...
    


@patch
def login_link(self: WebApplicationClient, scope=...):
    "Get a login link for this client"
    ...

def retr_code(ret):
    "Parse a request to get the code -- mainly used for testing"
    ...

@patch
def parse_response(self: _AppClient, code): # -> None:
    "Get the token from the oauth2 server response"
    ...

@patch
def get_info(self: _AppClient): # -> Any:
    "Get the info for authenticated user"
    ...

@patch
def retr_info(self: _AppClient, code):
    "Combines `parse_response` and `get_info`"
    ...

@patch
def retr_id(self: _AppClient, code):
    "Call `retr_info` and then return id/subscriber value"
    ...

