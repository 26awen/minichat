"""
This type stub file was generated by pyright.
"""

from typing import Any
from fastcore.utils import *
from fastcore.xml import *
from .components import *

__all__ = ['picocss', 'picolink', 'picocondcss', 'picocondlink', 'set_pico_cls', 'A', 'Form', 'AX', 'Checkbox', 'Card', 'Group', 'Search', 'Grid', 'DialogX', 'Hidden', 'Container', 'Script', 'Style', 'double_braces', 'undouble_braces', 'loose_format', 'ScriptX', 'replace_css_vars', 'StyleX', 'On', 'Any', 'Prev', 'Now', 'AnyNow', 'run_js', 'Titled', 'Socials', 'Favicon', 'jsd', 'clear']
picocss = ...
picolink = ...
picocondcss = ...
picocondlink = ...
def set_pico_cls():
    ...

def A(*c, hx_get=..., target_id=..., hx_swap=..., href=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """An A tag; `href` defaults to '#' for more concise use with HTMX"""
    ...

def Form(*c, enctype=..., target_id=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A Form tag; identical to plain `ft_hx` version except default `enctype='multipart/form-data'`"""
    ...

def AX(txt, hx_get=..., target_id=..., hx_swap=..., href=..., *, hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """An A tag with just one text child, allowing hx_get, target_id, and hx_swap to be positional params"""
    ...

def Checkbox(checked: bool = ..., label=..., value=..., *, target_id=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A Checkbox optionally inside a Label"""
    ...

def Card(*c, header=..., footer=..., target_id=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A PicoCSS Card, implemented as an Article with optional Header and Footer"""
    ...

def Group(*c, target_id=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A PicoCSS Group, implemented as a Fieldset with role 'group'"""
    ...

def Search(*c, target_id=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A PicoCSS Search, implemented as a Form with role 'search'"""
    ...

def Grid(*c, cls=..., target_id=..., hx_vals=..., id=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A PicoCSS Grid, implemented as child Divs in a Div with class 'grid'"""
    ...

def DialogX(*c, open=..., header=..., footer=..., id=..., target_id=..., hx_vals=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A PicoCSS Dialog, with children inside a Card"""
    ...

def Hidden(value: Any = ..., *, target_id=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """An Input of type 'hidden'"""
    ...

def Container(*args, target_id=..., hx_vals=..., id=..., cls=..., title=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """A PicoCSS Container, implemented as a Main with class 'container'"""
    ...

def Script(code: str = ..., *, id=..., cls=..., title=..., style=..., attrmap=..., valmap=..., **kwargs) -> FT:
    """A Script tag that doesn't escape its code"""
    ...

def Style(*c, id=..., cls=..., title=..., style=..., attrmap=..., valmap=..., **kwargs) -> FT:
    """A Style tag that doesn't escape its code"""
    ...

def double_braces(s):
    """Convert single braces to double braces if next to special chars or newline"""
    ...

def undouble_braces(s):
    """Convert double braces to single braces if next to special chars or newline"""
    ...

def loose_format(s, **kw):
    """String format `s` using `kw`, without being strict about braces outside of template params"""
    ...

def ScriptX(fname, src=..., nomodule=..., type=..., _async=..., defer=..., charset=..., crossorigin=..., integrity=..., **kw):
    """A `script` element with contents read from `fname`"""
    ...

def replace_css_vars(css, pre=..., **kwargs):
    """Replace `var(--)` CSS variables with `kwargs` if name prefix matches `pre`"""
    ...

def StyleX(fname, **kw):
    """A `style` element with contents read from `fname` and variables replaced from `kw`"""
    ...

def On(code: str, event: str = ..., sel: str = ..., me=...):
    """An async surreal.js script block event handler for `event` on selector `sel`"""
    ...

def Any(sel: str, code: str, event: str = ...):
    """An `any` async surreal.js script block event handler for `event` on selector `sel`"""
    ...

def Prev(code: str, event: str = ...):
    """An async surreal.js script block event handler for `event` on previous sibling"""
    ...

def Now(code: str, sel: str = ...):
    """An async surreal.js script block on selector `me(sel)`"""
    ...

def AnyNow(sel: str, code: str):
    """An async surreal.js script block on selector `any(sel)`"""
    ...

def run_js(js, id=..., **kw):
    """Run `js` script, auto-generating `id` based on name of caller if needed, and js-escaping any `kw` params"""
    ...

def Titled(title: str = ..., *args, target_id=..., hx_vals=..., id=..., cls=..., style=..., accesskey=..., contenteditable=..., dir=..., draggable=..., enterkeyhint=..., hidden=..., inert=..., inputmode=..., lang=..., popover=..., spellcheck=..., tabindex=..., translate=..., hx_get=..., hx_post=..., hx_put=..., hx_delete=..., hx_patch=..., hx_trigger=..., hx_target=..., hx_swap=..., hx_include=..., hx_select=..., hx_indicator=..., hx_push_url=..., hx_confirm=..., hx_disable=..., hx_replace_url=..., hx_on=..., **kwargs) -> FT:
    """An HTML partial containing a `Title`, and `H1`, and any provided children"""
    ...

def Socials(title, site_name, description, image, url=..., w=..., h=..., twitter_site=..., creator=..., card=...):
    """OG and Twitter social card headers"""
    ...

def Favicon(light_icon, dark_icon):
    """Light and dark favicon headers"""
    ...

def jsd(org, repo, root, path, prov=..., typ=..., ver=..., esm=..., **kwargs) -> FT:
    """jsdelivr `Script` or CSS `Link` tag, or URL"""
    ...

def clear(id):
    ...

